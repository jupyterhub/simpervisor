# build-system
# - ref 1: https://peps.python.org/pep-0517/
#
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# hatch ref: https://hatch.pypa.io/latest/
#
[tool.hatch.version]
path = "simpervisor/_version.py"


# project
# - ref 1: https://peps.python.org/pep-0621/
# - ref 2: https://hatch.pypa.io/latest/config/metadata/#project-metadata
#
[project]
name = "simpervisor"
description = "Simple async process supervisor"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["async", "process", "supervisor"]
authors = [
    {name = "Yuvi Panda", email = "yuvipanda@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/jupyterhub/simpervisor#readme"
Issues = "https://github.com/jupyterhub/simpervisor/issues"
Source = "https://github.com/jupyterhub/simpervisor"

[project.optional-dependencies]
test = [
    "aiohttp",
    "psutil",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
]


# pytest is used for running Python based tests
#
# ref: https://docs.pytest.org/en/stable/
#
[tool.pytest.ini_options]
addopts = "--verbose --color=yes --durations=10 --cov=simpervisor"
asyncio_mode = "auto"
testpaths = ["tests"]


# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]
target_version = [
    "py38",
    "py39",
    "py310",
    "py311",
]


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump]
github_url = "https://github.com/jupyterhub/simpervisor"

[tool.tbump.version]
current = "1.0.1.dev"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    (?P<pre>((a|b|rc)\d+)|)
    \.?
    (?P<dev>(?<=\.)dev\d*|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "simpervisor/_version.py"
